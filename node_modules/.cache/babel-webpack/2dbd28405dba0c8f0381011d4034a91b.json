{"ast":null,"code":"/*! @azure/msal-common v4.4.0 2021-06-29 */\n'use strict';\n\nimport { Separators, APP_METADATA } from '../../utils/Constants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * APP_METADATA Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: appmetadata-<environment>-<client_id>\r\n *\r\n * Value:\r\n * {\r\n *      clientId: client ID of the application\r\n *      environment: entity that issued the token, represented as a full host\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n * }\r\n */\n\nvar AppMetadataEntity =\n/** @class */\nfunction () {\n  function AppMetadataEntity() {}\n  /**\r\n   * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\r\n   */\n\n\n  AppMetadataEntity.prototype.generateAppMetadataKey = function () {\n    return AppMetadataEntity.generateAppMetadataCacheKey(this.environment, this.clientId);\n  };\n  /**\r\n   * Generate AppMetadata Cache Key\r\n   */\n\n\n  AppMetadataEntity.generateAppMetadataCacheKey = function (environment, clientId) {\n    var appMetaDataKeyArray = [APP_METADATA, environment, clientId];\n    return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n  };\n  /**\r\n   * Creates AppMetadataEntity\r\n   * @param clientId\r\n   * @param environment\r\n   * @param familyId\r\n   */\n\n\n  AppMetadataEntity.createAppMetadataEntity = function (clientId, environment, familyId) {\n    var appMetadata = new AppMetadataEntity();\n    appMetadata.clientId = clientId;\n    appMetadata.environment = environment;\n\n    if (familyId) {\n      appMetadata.familyId = familyId;\n    }\n\n    return appMetadata;\n  };\n  /**\r\n   * Validates an entity: checks for all expected params\r\n   * @param entity\r\n   */\n\n\n  AppMetadataEntity.isAppMetadataEntity = function (key, entity) {\n    if (!entity) {\n      return false;\n    }\n\n    return key.indexOf(APP_METADATA) === 0 && entity.hasOwnProperty(\"clientId\") && entity.hasOwnProperty(\"environment\");\n  };\n\n  return AppMetadataEntity;\n}();\n\nexport { AppMetadataEntity };","map":{"version":3,"sources":["../../../src/cache/entities/AppMetadataEntity.ts"],"names":[],"mappings":";;;;AAAA;;;;;AAOA;;;;;;;;;;;;;;;;;;AAcA,WAAA,iBAAA,GAAA,CA0DC;;;;;;AAlDG,EAAA,iBAAA,CAAA,SAAA,CAAA,sBAAA,GAAA,YAAA;AACI,WAAO,iBAAiB,CAAC,2BAAlB,CAA8C,KAAK,WAAnD,EAAgE,KAAK,QAArE,CAAP;AACH,GAFD;;;;;;AAOO,EAAA,iBAAA,CAAA,2BAAA,GAAP,UAAmC,WAAnC,EAAwD,QAAxD,EAAwE;AACpE,QAAM,mBAAmB,GAAkB,CACvC,YADuC,EAEvC,WAFuC,EAGvC,QAHuC,CAA3C;AAKA,WAAO,mBAAmB,CAAC,IAApB,CAAyB,UAAU,CAAC,mBAApC,EAAyD,WAAzD,EAAP;AACH,GAPM;;;;;;;;;AAeA,EAAA,iBAAA,CAAA,uBAAA,GAAP,UAA+B,QAA/B,EAAiD,WAAjD,EAAsE,QAAtE,EAAuF;AACnF,QAAM,WAAW,GAAG,IAAI,iBAAJ,EAApB;AAEA,IAAA,WAAW,CAAC,QAAZ,GAAuB,QAAvB;AACA,IAAA,WAAW,CAAC,WAAZ,GAA0B,WAA1B;;AACA,QAAI,QAAJ,EAAc;AACV,MAAA,WAAW,CAAC,QAAZ,GAAuB,QAAvB;AACH;;AAED,WAAO,WAAP;AACH,GAVM;;;;;;;AAgBA,EAAA,iBAAA,CAAA,mBAAA,GAAP,UAA2B,GAA3B,EAAwC,MAAxC,EAAsD;AAElD,QAAI,CAAC,MAAL,EAAa;AACT,aAAO,KAAP;AACH;;AAED,WACI,GAAG,CAAC,OAAJ,CAAY,YAAZ,MAA8B,CAA9B,IACA,MAAM,CAAC,cAAP,CAAsB,UAAtB,CADA,IAEA,MAAM,CAAC,cAAP,CAAsB,aAAtB,CAHJ;AAKH,GAXM;;AAYX,SAAA,iBAAA;AAAC,C","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { APP_METADATA, Separators } from \"../../utils/Constants\";\n\n/**\n * APP_METADATA Cache\n *\n * Key:Value Schema:\n *\n * Key: appmetadata-<environment>-<client_id>\n *\n * Value:\n * {\n *      clientId: client ID of the application\n *      environment: entity that issued the token, represented as a full host\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n * }\n */\nexport class AppMetadataEntity {\n    clientId: string;\n    environment: string;\n    familyId?: string;\n\n    /**\n     * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n     */\n    generateAppMetadataKey(): string {\n        return AppMetadataEntity.generateAppMetadataCacheKey(this.environment, this.clientId);\n    }\n\n    /**\n     * Generate AppMetadata Cache Key\n     */\n    static generateAppMetadataCacheKey(environment: string, clientId: string): string {\n        const appMetaDataKeyArray: Array<string> = [\n            APP_METADATA,\n            environment,\n            clientId,\n        ];\n        return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Creates AppMetadataEntity\n     * @param clientId\n     * @param environment\n     * @param familyId\n     */\n    static createAppMetadataEntity(clientId: string, environment: string, familyId?: string): AppMetadataEntity {\n        const appMetadata = new AppMetadataEntity();\n\n        appMetadata.clientId = clientId;\n        appMetadata.environment = environment;\n        if (familyId) {\n            appMetadata.familyId = familyId;\n        }\n\n        return appMetadata;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAppMetadataEntity(key: string, entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(APP_METADATA) === 0 &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"environment\")\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}