{"ast":null,"code":"/*! @azure/msal-browser v2.15.0 2021-06-29 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache = new Map();\n  }\n\n  MemoryStorage.prototype.getItem = function (key) {\n    return this.cache.get(key) || null;\n  };\n\n  MemoryStorage.prototype.setItem = function (key, value) {\n    this.cache.set(key, value);\n  };\n\n  MemoryStorage.prototype.removeItem = function (key) {\n    this.cache.delete(key);\n  };\n\n  MemoryStorage.prototype.getKeys = function () {\n    var cacheKeys = [];\n    this.cache.forEach(function (value, key) {\n      cacheKeys.push(key);\n    });\n    return cacheKeys;\n  };\n\n  MemoryStorage.prototype.containsKey = function (key) {\n    return this.cache.has(key);\n  };\n\n  MemoryStorage.prototype.clear = function () {\n    this.cache.clear();\n  };\n\n  return MemoryStorage;\n}();\n\nexport { MemoryStorage };","map":{"version":3,"sources":["../../src/cache/MemoryStorage.ts"],"names":[],"mappings":";;AAAA;;;;;;;;AAWI,WAAA,aAAA,GAAA;AACI,SAAK,KAAL,GAAa,IAAI,GAAJ,EAAb;AACH;;AAED,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,GAAR,EAAmB;AACf,WAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,KAAuB,IAA9B;AACH,GAFD;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,GAAR,EAAqB,KAArB,EAAkC;AAC9B,SAAK,KAAL,CAAW,GAAX,CAAe,GAAf,EAAoB,KAApB;AACH,GAFD;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,GAAX,EAAsB;AAClB,SAAK,KAAL,CAAW,MAAX,CAAkB,GAAlB;AACH,GAFD;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACI,QAAM,SAAS,GAAa,EAA5B;AACA,SAAK,KAAL,CAAW,OAAX,CAAmB,UAAC,KAAD,EAAgB,GAAhB,EAA2B;AAC1C,MAAA,SAAS,CAAC,IAAV,CAAe,GAAf;AACH,KAFD;AAGA,WAAO,SAAP;AACH,GAND;;AAQA,EAAA,aAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,GAAZ,EAAuB;AACnB,WAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAP;AACH,GAFD;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACI,SAAK,KAAL,CAAW,KAAX;AACH,GAFD;;AAGJ,SAAA,aAAA;AAAC,C","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class MemoryStorage implements IWindowStorage {\n\n    private cache: Map<string, string>;\n\n    constructor() {\n        this.cache = new Map<string, string>();\n    }\n\n    getItem(key: string): string | null {\n        return this.cache.get(key) || null;\n    }\n\n    setItem(key: string, value: string): void {\n        this.cache.set(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.cache.delete(key);\n    }\n\n    getKeys(): string[] {\n        const cacheKeys: string[] = [];\n        this.cache.forEach((value: string, key: string) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.cache.has(key);\n    }\n\n    clear() :void {\n        this.cache.clear();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}