{"ast":null,"code":"/*! @azure/msal-browser v2.15.0 2021-06-29 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar NavigationClient =\n/** @class */\nfunction () {\n  function NavigationClient() {}\n  /**\r\n   * Navigates to other pages within the same web application\r\n   * @param url\r\n   * @param options\r\n   */\n\n\n  NavigationClient.prototype.navigateInternal = function (url, options) {\n    return NavigationClient.defaultNavigateWindow(url, options);\n  };\n  /**\r\n   * Navigates to other pages outside the web application i.e. the Identity Provider\r\n   * @param url\r\n   * @param options\r\n   */\n\n\n  NavigationClient.prototype.navigateExternal = function (url, options) {\n    return NavigationClient.defaultNavigateWindow(url, options);\n  };\n  /**\r\n   * Default navigation implementation invoked by the internal and external functions\r\n   * @param url\r\n   * @param options\r\n   */\n\n\n  NavigationClient.defaultNavigateWindow = function (url, options) {\n    if (options.noHistory) {\n      window.location.replace(url);\n    } else {\n      window.location.assign(url);\n    }\n\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        resolve(true);\n      }, options.timeout);\n    });\n  };\n\n  return NavigationClient;\n}();\n\nexport { NavigationClient };","map":{"version":3,"sources":["../../src/navigation/NavigationClient.ts"],"names":[],"mappings":";;AAAA;;;;;;;;AAQA,WAAA,gBAAA,GAAA,CAqCC;;;;;;;;AA/BG,EAAA,gBAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,GAAjB,EAA8B,OAA9B,EAAwD;AACpD,WAAO,gBAAgB,CAAC,qBAAjB,CAAuC,GAAvC,EAA4C,OAA5C,CAAP;AACH,GAFD;;;;;;;;AASA,EAAA,gBAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,GAAjB,EAA8B,OAA9B,EAAwD;AACpD,WAAO,gBAAgB,CAAC,qBAAjB,CAAuC,GAAvC,EAA4C,OAA5C,CAAP;AACH,GAFD;;;;;;;;AASe,EAAA,gBAAA,CAAA,qBAAA,GAAf,UAAqC,GAArC,EAAkD,OAAlD,EAA4E;AACxE,QAAI,OAAO,CAAC,SAAZ,EAAuB;AACnB,MAAA,MAAM,CAAC,QAAP,CAAgB,OAAhB,CAAwB,GAAxB;AACH,KAFD,MAEO;AACH,MAAA,MAAM,CAAC,QAAP,CAAgB,MAAhB,CAAuB,GAAvB;AACH;;AAED,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAQ;AACvB,MAAA,UAAU,CAAC,YAAA;AACP,QAAA,OAAO,CAAC,IAAD,CAAP;AACH,OAFS,EAEP,OAAO,CAAC,OAFD,CAAV;AAGH,KAJM,CAAP;AAKH,GAZc;;AAanB,SAAA,gBAAA;AAAC,C","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INavigationClient } from \"./INavigationClient\";\nimport { NavigationOptions } from \"./NavigationOptions\";\n\nexport class NavigationClient implements INavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url \n     * @param options \n     */\n    navigateInternal(url: string, options: NavigationOptions): Promise<boolean>{\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url \n     * @param options \n     */\n    navigateExternal(url: string, options: NavigationOptions): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url \n     * @param options \n     */\n    private static defaultNavigateWindow(url: string, options: NavigationOptions): Promise<boolean> {\n        if (options.noHistory) {\n            window.location.replace(url);\n        } else {\n            window.location.assign(url);\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}