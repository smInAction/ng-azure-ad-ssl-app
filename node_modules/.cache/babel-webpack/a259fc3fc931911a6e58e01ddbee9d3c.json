{"ast":null,"code":"/*! @azure/msal-common v4.4.0 2021-06-29 */\n'use strict';\n\nimport { ThrottlingConstants } from '../../utils/Constants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar ThrottlingEntity =\n/** @class */\nfunction () {\n  function ThrottlingEntity() {}\n  /**\r\n   * validates if a given cache entry is \"Throttling\", parses <key,value>\r\n   * @param key\r\n   * @param entity\r\n   */\n\n\n  ThrottlingEntity.isThrottlingEntity = function (key, entity) {\n    var validateKey = false;\n\n    if (key) {\n      validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n    }\n\n    var validateEntity = true;\n\n    if (entity) {\n      validateEntity = entity.hasOwnProperty(\"throttleTime\");\n    }\n\n    return validateKey && validateEntity;\n  };\n\n  return ThrottlingEntity;\n}();\n\nexport { ThrottlingEntity };","map":{"version":3,"sources":["../../../src/cache/entities/ThrottlingEntity.ts"],"names":[],"mappings":";;;;AAAA;;;;;;;;AAOA,WAAA,gBAAA,GAAA,CA4BC;;;;;;;;AAdU,EAAA,gBAAA,CAAA,kBAAA,GAAP,UAA0B,GAA1B,EAAuC,MAAvC,EAAsD;AAElD,QAAI,WAAW,GAAY,KAA3B;;AACA,QAAI,GAAJ,EAAS;AACL,MAAA,WAAW,GAAG,GAAG,CAAC,OAAJ,CAAY,mBAAmB,CAAC,iBAAhC,MAAuD,CAArE;AACH;;AAED,QAAI,cAAc,GAAY,IAA9B;;AACA,QAAI,MAAJ,EAAY;AACR,MAAA,cAAc,GAAG,MAAM,CAAC,cAAP,CAAsB,cAAtB,CAAjB;AACH;;AAED,WAAO,WAAW,IAAI,cAAtB;AACH,GAbM;;AAcX,SAAA,gBAAA;AAAC,C","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ThrottlingConstants } from \"../../utils/Constants\";\n\nexport class ThrottlingEntity {\n    // Unix-time value representing the expiration of the throttle\n    throttleTime: number;\n    // Information provided by the server\n    error?: string;\n    errorCodes?: Array<string>;\n    errorMessage?: string;\n    subError?: string;\n\n    /**\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isThrottlingEntity(key: string, entity?: object): boolean {\n        \n        let validateKey: boolean = false;\n        if (key) {\n            validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n        }\n        \n        let validateEntity: boolean = true;\n        if (entity) {\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}