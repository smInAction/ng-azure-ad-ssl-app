{"ast":null,"code":"/*! @azure/msal-browser v2.15.0 2021-06-29 */\n'use strict';\n\nimport { BrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.js';\nimport { BrowserCacheLocation } from '../utils/BrowserConstants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar BrowserStorage =\n/** @class */\nfunction () {\n  function BrowserStorage(cacheLocation) {\n    this.validateWindowStorage(cacheLocation);\n    this.windowStorage = window[cacheLocation];\n  }\n\n  BrowserStorage.prototype.validateWindowStorage = function (cacheLocation) {\n    if (cacheLocation !== BrowserCacheLocation.LocalStorage && cacheLocation !== BrowserCacheLocation.SessionStorage) {\n      throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n    }\n\n    var storageSupported = !!window[cacheLocation];\n\n    if (!storageSupported) {\n      throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n    }\n  };\n\n  BrowserStorage.prototype.getItem = function (key) {\n    return this.windowStorage.getItem(key);\n  };\n\n  BrowserStorage.prototype.setItem = function (key, value) {\n    this.windowStorage.setItem(key, value);\n  };\n\n  BrowserStorage.prototype.removeItem = function (key) {\n    this.windowStorage.removeItem(key);\n  };\n\n  BrowserStorage.prototype.getKeys = function () {\n    return Object.keys(this.windowStorage);\n  };\n\n  BrowserStorage.prototype.containsKey = function (key) {\n    return this.windowStorage.hasOwnProperty(key);\n  };\n\n  return BrowserStorage;\n}();\n\nexport { BrowserStorage };","map":{"version":3,"sources":["../../src/cache/BrowserStorage.ts"],"names":[],"mappings":";;;;;AAAA;;;;;;;;AAaI,WAAA,cAAA,CAAY,aAAZ,EAAiC;AAC7B,SAAK,qBAAL,CAA2B,aAA3B;AACA,SAAK,aAAL,GAAqB,MAAM,CAAC,aAAD,CAA3B;AACH;;AAEO,EAAA,cAAA,CAAA,SAAA,CAAA,qBAAA,GAAR,UAA8B,aAA9B,EAAmD;AAC/C,QAAI,aAAa,KAAK,oBAAoB,CAAC,YAAvC,IAAuD,aAAa,KAAK,oBAAoB,CAAC,cAAlG,EAAkH;AAC9G,YAAM,6BAA6B,CAAC,8BAA9B,CAA6D,aAA7D,CAAN;AACH;;AACD,QAAM,gBAAgB,GAAG,CAAC,CAAC,MAAM,CAAC,aAAD,CAAjC;;AACA,QAAI,CAAC,gBAAL,EAAuB;AACnB,YAAM,6BAA6B,CAAC,8BAA9B,CAA6D,aAA7D,CAAN;AACH;AACJ,GARO;;AAUR,EAAA,cAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,GAAR,EAAmB;AACf,WAAO,KAAK,aAAL,CAAmB,OAAnB,CAA2B,GAA3B,CAAP;AACH,GAFD;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,GAAR,EAAqB,KAArB,EAAkC;AAC9B,SAAK,aAAL,CAAmB,OAAnB,CAA2B,GAA3B,EAAgC,KAAhC;AACH,GAFD;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,GAAX,EAAsB;AAClB,SAAK,aAAL,CAAmB,UAAnB,CAA8B,GAA9B;AACH,GAFD;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACI,WAAO,MAAM,CAAC,IAAP,CAAY,KAAK,aAAjB,CAAP;AACH,GAFD;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,GAAZ,EAAuB;AACnB,WAAO,KAAK,aAAL,CAAmB,cAAnB,CAAkC,GAAlC,CAAP;AACH,GAFD;;AAGJ,SAAA,cAAA;AAAC,C","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class BrowserStorage implements IWindowStorage {\n\n    private windowStorage: Storage;\n\n    constructor(cacheLocation: string) {\n        this.validateWindowStorage(cacheLocation);\n        this.windowStorage = window[cacheLocation];\n    }\n\n    private validateWindowStorage(cacheLocation: string): void {\n        if (cacheLocation !== BrowserCacheLocation.LocalStorage && cacheLocation !== BrowserCacheLocation.SessionStorage) {\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n        const storageSupported = !!window[cacheLocation];\n        if (!storageSupported) {\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n    }\n\n    getItem(key: string): string | null {\n        return this.windowStorage.getItem(key);\n    }\n\n    setItem(key: string, value: string): void {\n        this.windowStorage.setItem(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.windowStorage.removeItem(key);\n    }\n\n    getKeys(): string[] {\n        return Object.keys(this.windowStorage);\n    }\n\n    containsKey(key: string): boolean {\n        return this.windowStorage.hasOwnProperty(key);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}