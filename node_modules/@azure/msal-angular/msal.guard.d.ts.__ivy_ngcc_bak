import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, CanLoad, UrlTree, Router } from "@angular/router";
import { MsalService } from "./msal.service";
import { Location } from "@angular/common";
import { MsalGuardConfiguration } from "./msal.guard.config";
import { Observable } from "rxjs";
import { MsalBroadcastService } from "./msal.broadcast.service";
export declare class MsalGuard implements CanActivate, CanActivateChild, CanLoad {
    private msalGuardConfig;
    private msalBroadcastService;
    private authService;
    private location;
    private router;
    private loginFailedRoute?;
    constructor(msalGuardConfig: MsalGuardConfiguration, msalBroadcastService: MsalBroadcastService, authService: MsalService, location: Location, router: Router);
    /**
     * Parses url string to UrlTree
     * @param url
     */
    parseUrl(url: string): UrlTree;
    /**
     * Builds the absolute url for the destination page
     * @param path Relative path of requested page
     * @returns Full destination url
     */
    getDestinationUrl(path: string): string;
    /**
     * Interactively prompt the user to login
     * @param url Path of the requested page
     */
    private loginInteractively;
    /**
     * Helper which checks for the correct interaction type, prevents page with Guard to be set as reidrect, and calls handleRedirectObservable
     * @param state
     */
    private activateHelper;
    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree>;
    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree>;
    canLoad(): Observable<boolean>;
}
//# sourceMappingURL=msal.guard.d.ts.map