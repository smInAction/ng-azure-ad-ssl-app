{"version":3,"file":"msal.service.d.ts","sources":["msal.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { Location } from \"@angular/common\";\nimport { IPublicClientApplication, EndSessionRequest, EndSessionPopupRequest, AuthenticationResult, RedirectRequest, SilentRequest, PopupRequest, SsoSilentRequest, Logger } from \"@azure/msal-browser\";\nimport { Observable } from \"rxjs\";\nimport { IMsalService } from \"./IMsalService\";\nexport declare class MsalService implements IMsalService {\n    instance: IPublicClientApplication;\n    private location;\n    private redirectHash;\n    private logger;\n    constructor(instance: IPublicClientApplication, location: Location);\n    acquireTokenPopup(request: PopupRequest): Observable<AuthenticationResult>;\n    acquireTokenRedirect(request: RedirectRequest): Observable<void>;\n    acquireTokenSilent(silentRequest: SilentRequest): Observable<AuthenticationResult>;\n    handleRedirectObservable(hash?: string): Observable<AuthenticationResult>;\n    loginPopup(request?: PopupRequest): Observable<AuthenticationResult>;\n    loginRedirect(request?: RedirectRequest): Observable<void>;\n    logout(logoutRequest?: EndSessionRequest): Observable<void>;\n    logoutRedirect(logoutRequest?: EndSessionRequest): Observable<void>;\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Observable<void>;\n    ssoSilent(request: SsoSilentRequest): Observable<AuthenticationResult>;\n    /**\n     * Gets logger for msal-angular.\n     * If no logger set, returns logger instance created with same options as msal-browser\n     */\n    getLogger(): Logger;\n    setLogger(logger: Logger): void;\n}\n"]}