{"version":3,"file":"msal.guard.d.ts","sources":["msal.guard.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, CanLoad, UrlTree, Router } from \"@angular/router\";\nimport { MsalService } from \"./msal.service\";\nimport { Location } from \"@angular/common\";\nimport { MsalGuardConfiguration } from \"./msal.guard.config\";\nimport { Observable } from \"rxjs\";\nimport { MsalBroadcastService } from \"./msal.broadcast.service\";\nexport declare class MsalGuard implements CanActivate, CanActivateChild, CanLoad {\n    private msalGuardConfig;\n    private msalBroadcastService;\n    private authService;\n    private location;\n    private router;\n    private loginFailedRoute?;\n    constructor(msalGuardConfig: MsalGuardConfiguration, msalBroadcastService: MsalBroadcastService, authService: MsalService, location: Location, router: Router);\n    /**\n     * Parses url string to UrlTree\n     * @param url\n     */\n    parseUrl(url: string): UrlTree;\n    /**\n     * Builds the absolute url for the destination page\n     * @param path Relative path of requested page\n     * @returns Full destination url\n     */\n    getDestinationUrl(path: string): string;\n    /**\n     * Interactively prompt the user to login\n     * @param url Path of the requested page\n     */\n    private loginInteractively;\n    /**\n     * Helper which checks for the correct interaction type, prevents page with Guard to be set as reidrect, and calls handleRedirectObservable\n     * @param state\n     */\n    private activateHelper;\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree>;\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree>;\n    canLoad(): Observable<boolean>;\n}\n"]}